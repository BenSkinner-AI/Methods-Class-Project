#include <iostream>
#include <string>
#include <fstream>
#include <vector>
#include <iomanip>
using namespace std;

class User {
private:
    int current_login;
public:
    User(): current_login(0){};

    int read_file(string file_name, string username, string password) {
        // Open the file for reading
        ifstream login_file(file_name);
        int login = 0;
        // Check if the file was successfully opened
        if (login_file.is_open()) {
            // Read each line of the file and print it to the console
            string line;
            while (getline(login_file, line)) {
                size_t pos = line.find(",");
                string CompareUsername = line.substr(0, pos);
                string ComparePassword = line.substr(pos + 1);
                login++;
                if (CompareUsername == username && ComparePassword == password)
                {
                    current_login = login;
                    return login;
                }
            }

            // Close the file
            login_file.close();
        }
        else
        {
            cout << "Error opening file." << endl;
            return 0;
        }
        return 0;
    }

    void create_accountant(string CreateUsername, string CreatePassword, string CreateAddress, string CreatePayment) {
        // Open a file for appending new login information
        ofstream login_file("login_info.txt", ios_base::app);
        if (login_file.is_open())
        {
        cout << "\nEnter desired username:";
        cin >> CreateUsername;
        cout << "Enter desired password:";
        cin >> CreatePassword;
        cout << "Enter shipping address:";
        cin.ignore();
        std::getline(std::cin, CreateAddress);
        cout << "Enter payment:";
        cin >> CreatePayment;

        login_file << CreateUsername << "," << CreatePassword << endl;
        login_file << CreateAddress << "+" << CreatePayment << endl;
        // Close the file
        login_file.close();
        cout << "Accountant login information saved.\n" << endl;
        }
        else
        {
            cout << "Error creating file." << endl;
        }
    }

    void edit_account() {
    }
};


class ShoppingCart {
private:
    vector<string> names;
    vector<double> prices;
public:
    ShoppingCart(){

    }

    std::string add_item(int index) {
        std::ifstream file("products.txt");
        if (!file) {
            throw std::invalid_argument("Error opening file");
        }

        std::string line;
        int current_index = 0;
        while (std::getline(file, line)) {
            if (current_index == index - 1) {
                size_t pos = line.find(",");
                string Game = line.substr(0, pos);
                string Price= line.substr(pos + 1);
                names.push_back(Game);
                prices.push_back(stod(Price));
                cout<< "\n" << Game << " for $" << Price << " was added to your cart." << endl;
            }
                current_index++;
        }
    }

    void remove_item(unsigned int index) {
        if (index < 1 || index > names.size()) {
            throw std::invalid_argument("Index out of range");
        }
        names.erase(names.begin() + index - 1);
        prices.erase(prices.begin() + index - 1);
        std::cout << "Item " << index << " has been removed from the cart." << std::endl;
    }

    void display_items() {
        if (names.empty()) {
            std::cout << "Your cart is empty" << std::endl;
        }
        else {
            std::cout << "\nGames in your cart: " << std::endl;
            double total_price = 0.0;
            for (unsigned int i = 0; i < names.size(); i++) {
                std::cout << i+1 << ". " << names[i] << " - $" << prices[i] << std::endl;
                total_price += prices[i];
            }
            std::cout << "Total price: $" << total_price << std::endl;
        }
    }

    double get_total_price() const {
        double total_price = 0.0;
        for (unsigned int i = 0; i < prices.size(); i++) {
            total_price += prices[i];
        }
        return total_price;
    }

    void clear_cart() {
        names.clear();
        prices.clear();
    }

    void add_history(){

    }

};

class Checkout {
private:
    ShoppingCart& cart; // reference to the ShoppingCart object
public:
    Checkout(ShoppingCart& cart) : cart(cart) {}
    void process_order() {
        double price = cart.get_total_price();
        if (price != 0){
        cart.display_items();
        double total = price * 1.07;
        std::cout << "\nYour total after tax is: $" << std::fixed << std::setprecision(2) << total << std::endl;
        cart.clear_cart();
        std::cout << "Thank you for shopping!" << std::endl;
        }
        else
        {
            cout << "\nYou have nothing in your cart to check out." << endl;
        }
    }
};

class Product {
private:

public:
    // Default constructor
    Product() {
    }

    // Read data from a file
    void view_products() {
        // Open the file for reading
        ifstream product_file("products.txt");

        // Check if the file was successfully opened
        if (product_file.is_open()) {
            // Read each line of the file and print it to the console
            string line;
            unsigned int i = 1;
            while (getline(product_file, line)) {
                size_t pos = line.find(",");
                string Game = line.substr(0, pos);
                string Price= line.substr(pos + 1);

                cout << i << ". " << Game << " ($" << Price << ")" << endl;
                i++;
            }

            // Close the file
            product_file.close();
        }
        else
        {
            cout << "Error opening file." << endl;

        }
    }
};


int main() {
    User user;
    ShoppingCart cart;
    Product product;
    Checkout checkout(cart);
    ofstream login_file("login_info.txt", ios_base::app);
    while (true)
    {
        int choiceL = 0;
        int exit = 0;
        while (choiceL == 0)
        {
        cout <<"Log in or sign up to access the store." << endl;
        cout <<"1. Login" << endl;
        cout <<"2. Sign up" << endl;
        cout <<"3. Exit login page" << endl;
        cout << "Enter your choice (1-3): ";
        cin >> choiceL;
        switch (choiceL)
            {
            case 1:
                choiceL = 1;
                break;
            case 2:
                user.create_accountant("my_username", "my_password", "my_address", "my_payment");
                break;
            case 3:
                choiceL = 1;
                exit = 1;
                break;
            }
        }

        if (exit == 1)
        {
            break;
        }
        else
        {
        int menuloop = 0;
        while (menuloop != 1)
        {
        // Prompt the user for a username and password
        string username, password;
        int login = 0;
        cout << "\n[Type 0 for the username and password to return to the login menu]" << endl;
        cout << "Enter your username: ";
        cin >> username;
        cout << "Enter your password: ";
        cin >> password;
        cout << endl;
        login = user.read_file("login_info.txt", username, password);
        // Check if the username and password are valid
        if (login > 0)
        {
            cout << "Login successful!" << endl;
            // Run the appropriate system command to grant access to the command line
            cout << "\nWelcome to the store!" << endl;
            int choiceM = 0;
            while (choiceM != 8)
                {
                    // Display the menu
                    cout << "\nMain Menu" << endl;
                    cout << "1. View games" << endl;
                    cout << "2. Add game to cart" << endl;
                    cout << "3. Remove game from cart" << endl;
                    cout << "4. View cart" << endl;
                    cout << "5. Checkout games in cart"<< endl;
                    cout << "6. Edit account details"<< endl;
                    cout << "7. View order history"<< endl;
                    cout << "8. Sign out/Exit" << endl;

                    // Get the user's choice
                    cout << "Enter your choice (1-8): ";
                    cin >> choiceM;

                    // Handle the user's choice
                    int indexnumber = 0;
                    switch (choiceM)
                        {
                        case 1:
                            cout << "\nGames available:" << endl;    //1 Done
                            product.view_products();
                            break;
                        case 2:
                            cout << "Enter game number to add to cart: ";            //2 Done
                            cin >> indexnumber;
                            cart.add_item(indexnumber);
                            break;
                        case 3:
                            cout << "Enter game number to remove from cart: ";       //3 Done
                            cin >> indexnumber;
                             cart.remove_item(indexnumber);
                            break;
                        case 4:
                            cout << endl;                           //4 Done
                            cart.display_items();
                            cout << endl;
                            break;
                        case 5:
                            checkout.process_order();               //5 Done
                            break;
                        case 6:
                            user.edit_account();
                            break;
                        case 7:
                            cout << "Your cart contains:" << endl;
                            // Code to display items in cart
                            break;
                        case 8:                                     //8 Done
                            cout << "\nSigning out...\n"<< endl;
                            choiceM = 8;
                            break;
                        default:
                            cout << "Invalid choice. Please enter a number between 1 and 4." << endl;
                        }
                }
            break;
        }
        if (username == "0" && password == "0")
        {
            menuloop = 1;
        }
        else
        {
           cout << "Invalid username or password. Please try again.\n" << endl;
        }
        }
        }
    }

    return 0;
}
